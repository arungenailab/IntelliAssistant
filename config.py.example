"""
Configuration settings for the IntelliAssistant application.

IMPORTANT: This is an example configuration file.
To use this application:
1. Copy this file to config.py
2. Set your environment variables for sensitive information
   - On Windows: set GEMINI_API_KEY=your_api_key
   - On Linux/Mac: export GEMINI_API_KEY=your_api_key
3. Or modify the environment variable loading to provide default values
   - WARNING: Using default values in code is not recommended for production!
"""

import os
from typing import Optional, Dict, Any, List

# Application settings
DEBUG = True
HOST = "127.0.0.1"
PORT = 5000
SECRET_KEY = "your-secret-key-goes-here"  # Change this for production!

# Default dataset
DEFAULT_DATASET = "MSFT"

# API Keys - Please set these in environment variables for security
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")  # Or replace with your API key
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")  # Or replace with your API key

# Database settings - Replace with your actual database settings
DB_CONFIG = {
    "server": "your-server-name",
    "database": "your-database-name",
    "trusted_connection": "yes"  # Set to "no" if using SQL authentication
}

# AI Model settings
DEFAULT_MODEL = "gemini-1.5-pro"
AVAILABLE_MODELS = [
    "gemini-1.0-pro",
    "gemini-1.5-pro",
    "gemini-1.5-flash",
    "gemini-2.0-pro",
    "gemini-2.0-flash"
]

# Cache settings
CACHE_ENABLED = True
CACHE_DIRECTORY = os.path.join(os.path.dirname(__file__), "cache")
CACHE_EXPIRY = 3600  # in seconds

# Logging
LOG_LEVEL = "INFO"
LOG_FILE = os.path.join(os.path.dirname(__file__), "logs", "app.log")

# Max tokens for API calls
MAX_TOKENS = 2048 